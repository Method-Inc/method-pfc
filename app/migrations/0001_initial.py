# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-04-09 12:09
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActuatorVariableModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.TextField(unique=True)),
                ("json", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                "verbose_name": "Actuator Variable",
                "verbose_name_plural": "Actuator Variables",
            },
        ),
        migrations.CreateModel(
            name="CultivarModel",
            fields=[
                (
                    "uuid",
                    models.UUIDField(primary_key=True, serialize=False, unique=True),
                ),
                ("name", models.TextField()),
                ("json", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={"verbose_name": "Cultivar", "verbose_name_plural": "Cultivars"},
        ),
        migrations.CreateModel(
            name="CultivationMethodModel",
            fields=[
                (
                    "uuid",
                    models.UUIDField(primary_key=True, serialize=False, unique=True),
                ),
                ("name", models.TextField()),
                ("json", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                "verbose_name": "Cultivation Method",
                "verbose_name_plural": "Cultivation Methods",
            },
        ),
        migrations.CreateModel(
            name="DeviceConfigModel",
            fields=[
                (
                    "uuid",
                    models.UUIDField(primary_key=True, serialize=False, unique=True),
                ),
                ("name", models.TextField()),
                ("version", models.TextField()),
                ("json", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                "verbose_name": "Device Configuration",
                "verbose_name_plural": "Device Configurations",
            },
        ),
        migrations.CreateModel(
            name="EnvironmentModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("state", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                "verbose_name": "Environment",
                "verbose_name_plural": "Environments",
                "get_latest_by": "timestamp",
            },
        ),
        migrations.CreateModel(
            name="EventModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("request", django.contrib.postgres.fields.jsonb.JSONField()),
                (
                    "response",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
                "get_latest_by": "timestamp",
            },
        ),
        migrations.CreateModel(
            name="PeripheralSetupModel",
            fields=[
                (
                    "uuid",
                    models.UUIDField(primary_key=True, serialize=False, unique=True),
                ),
                ("name", models.TextField()),
                ("json", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                "verbose_name": "Peripheral Setup",
                "verbose_name_plural": "Peripheral Setups",
            },
        ),
        migrations.CreateModel(
            name="RecipeModel",
            fields=[
                (
                    "uuid",
                    models.UUIDField(primary_key=True, serialize=False, unique=True),
                ),
                ("json", django.contrib.postgres.fields.jsonb.JSONField()),
                ("name", models.TextField()),
                ("version", models.TextField()),
            ],
            options={"verbose_name": "Recipe", "verbose_name_plural": "Recipes"},
        ),
        migrations.CreateModel(
            name="RecipeTransitionModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("minute", models.IntegerField()),
                ("phase", models.TextField()),
                ("cycle", models.TextField()),
                ("environment_name", models.TextField()),
                ("environment_state", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                "verbose_name": "Recipe Transition",
                "verbose_name_plural": "Recipe Transitions",
            },
        ),
        migrations.CreateModel(
            name="SensorVariableModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.TextField(unique=True)),
                ("json", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                "verbose_name": "Sensor Variable",
                "verbose_name_plural": "Sensor Variables",
            },
        ),
        migrations.CreateModel(
            name="StateModel",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("device", django.contrib.postgres.fields.jsonb.JSONField()),
                ("recipe", django.contrib.postgres.fields.jsonb.JSONField()),
                ("environment", django.contrib.postgres.fields.jsonb.JSONField()),
                ("peripherals", django.contrib.postgres.fields.jsonb.JSONField()),
                ("controllers", django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={"verbose_name": "State", "verbose_name_plural": "State"},
        ),
    ]
